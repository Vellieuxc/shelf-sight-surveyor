
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://horzlrlmbfivzrmycauu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhvcnpscmxtYmZpdnpybXljYXV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxMDUzNzAsImV4cCI6MjA2MTY4MTM3MH0.jMtqLKCDe19sWWX_HTUyxGZiVNUuUYu8iQYgUETTBYs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true
  },
  global: {
    headers: {
      'X-App-Version': '1.0.0'
    }
  }
});

// Check if the pictures bucket exists (for verification only, not creation)
export const verifyPicturesBucketExists = async () => {
  try {
    // Simplified verification approach
    // Instead of checking bucket listing (which might have permission issues),
    // we'll try to get bucket details directly for "pictures"
    const { data: bucketInfo, error } = await supabase.storage
      .getBucket('pictures');
    
    if (error) {
      // If there's an error other than "not found", log it
      console.error('Error verifying pictures bucket:', error.message);
      
      // Check if error is specifically that the bucket wasn't found
      if (error.message.includes('not found')) {
        throw new Error('Pictures bucket not found. Please contact an administrator.');
      }
      
      // For other errors, report them differently
      throw new Error(`Failed to verify if pictures bucket exists: ${error.message}`);
    }
    
    // If we got this far, the bucket exists
    console.log('Pictures bucket verified successfully');
    return true;
  } catch (error: any) {
    console.error('Error verifying pictures bucket:', error);
    // Rethrow the error so it can be handled by the caller
    throw error;
  }
};
