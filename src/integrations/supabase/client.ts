
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://horzlrlmbfivzrmycauu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhvcnpscmxtYmZpdnpybXljYXV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxMDUzNzAsImV4cCI6MjA2MTY4MTM3MH0.jMtqLKCDe19sWWX_HTUyxGZiVNUuUYu8iQYgUETTBYs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true
  },
  global: {
    headers: {
      'X-App-Version': '1.0.0'
    }
  }
});

// Check if the pictures bucket exists (for verification only, not creation)
export const verifyPicturesBucketExists = async () => {
  try {
    // Check if the bucket exists by listing buckets
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error('Error listing buckets:', listError.message);
      throw new Error(`Failed to verify if pictures bucket exists: ${listError.message}`);
    }
    
    const picturesBucketExists = buckets?.some(bucket => bucket.name === 'pictures');
    
    if (!picturesBucketExists) {
      console.error('Pictures bucket not found. It should have been created via SQL migration.');
      throw new Error('Pictures bucket not found. Please contact an administrator.');
    }
    
    return true;
  } catch (error) {
    console.error('Error verifying pictures bucket:', error);
    // Rethrow the error so it can be handled by the caller
    throw error;
  }
};
