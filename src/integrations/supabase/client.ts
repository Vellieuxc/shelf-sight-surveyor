
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://horzlrlmbfivzrmycauu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhvcnpscmxtYmZpdnpybXljYXV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxMDUzNzAsImV4cCI6MjA2MTY4MTM3MH0.jMtqLKCDe19sWWX_HTUyxGZiVNUuUYu8iQYgUETTBYs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true
  },
  global: {
    headers: {
      'X-App-Version': '1.0.0'
    }
  }
});

// Create a function to ensure the pictures storage bucket exists
export const ensurePicturesBucketExists = async () => {
  try {
    // First check if we can access the bucket (this will tell us if it exists)
    const { data: bucketExists, error: bucketCheckError } = await supabase
      .storage
      .getBucket('pictures');
    
    if (!bucketExists) {
      // If bucket doesn't exist, try to create it
      const { data: newBucket, error: createError } = await supabase.storage.createBucket('pictures', {
        public: true,
        allowedMimeTypes: ['image/png', 'image/jpeg', 'image/jpg', 'image/gif', 'image/webp'],
        fileSizeLimit: 5242880 // 5MB
      });
      
      if (createError) {
        console.warn('Unable to create pictures bucket:', createError.message);
        console.info('This may be expected if you don\'t have permission to create buckets.');
        console.info('The bucket might already exist but requires admin access to view.');
        // We don't throw here because the bucket might exist but the user doesn't have permission to check
        // We'll let the upload attempt fail if that's the case
      } else {
        console.info('Created pictures bucket successfully');
      }
    } else {
      console.info('Pictures bucket already exists');
    }
  } catch (error) {
    console.warn('Error checking or creating pictures bucket:', error);
    // We don't throw because we want the app to continue even if we can't confirm the bucket
  }
};

// Call this function when the app starts
ensurePicturesBucketExists();
