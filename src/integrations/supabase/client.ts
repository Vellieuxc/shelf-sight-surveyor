
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://horzlrlmbfivzrmycauu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhvcnpscmxtYmZpdnpybXljYXV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxMDUzNzAsImV4cCI6MjA2MTY4MTM3MH0.jMtqLKCDe19sWWX_HTUyxGZiVNUuUYu8iQYgUETTBYs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true
  },
  global: {
    headers: {
      'X-App-Version': '1.0.0'
    }
  }
});

// Create a function to ensure the pictures storage bucket exists
export const ensurePicturesBucketExists = async () => {
  try {
    // Check if the bucket already exists by listing buckets
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error('Error listing buckets:', listError.message);
      throw new Error(`Failed to check if pictures bucket exists: ${listError.message}`);
    }
    
    const picturesBucketExists = buckets?.some(bucket => bucket.name === 'pictures');
    
    if (picturesBucketExists) {
      console.info('Pictures bucket already exists');
      return; // Bucket exists
    }
    
    console.warn('Pictures bucket not found, attempting to create it');
    // If bucket doesn't exist, try to create it
    const { data: newBucket, error: createError } = await supabase.storage.createBucket('pictures', {
      public: true,
      allowedMimeTypes: ['image/png', 'image/jpeg', 'image/jpg', 'image/gif', 'image/webp'],
      fileSizeLimit: 5242880 // 5MB
    });
    
    if (createError) {
      console.error('Unable to create pictures bucket:', createError.message);
      throw new Error(`Failed to create pictures bucket: ${createError.message}`);
    } else {
      console.info('Created pictures bucket successfully');
    }
  } catch (error) {
    console.error('Error with pictures bucket:', error);
    // Rethrow the error so it can be handled by the caller
    throw error;
  }
};

// Don't call this function automatically on import
// Instead, it will be called explicitly before uploads
